AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A lambda function that forwards messages to an SNS topic

Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-serverless-sns-forwarder
    Description: This is a serverless app that receives a JSON array of strings and forwards them to a SNS topic.
    Author: AWS
    # SPDX License Id, e.g., MIT, MIT-0, Apache-2.0. See https://spdx.org/licenses for more details
    SpdxLicenseId: MIT
    # paths are relative to .aws-sam/build directory
    LicenseUrl: ../../LICENSE
    ReadmeUrl: ../../README.md
    Labels: [serverless,sns]
    HomePageUrl: https://github.com/awslabs/aws-serverless-sns-forwarder
    # Update the semantic version and run sam publish to publish a new version of your app
    SemanticVersion: 0.0.1
    # best practice is to use git tags for each release and link to the version tag as your source code URL
    SourceCodeUrl: https://github.com/awslabs/aws-serverless-sns-forwarder/tree/0.0.1

Parameters:
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO
  SnsTopicArn:
    Type: String
    Description: Sns Topic Arn
    Default: default
  SnsTopicName:
    Type: String
    Description: Sns Topic Name
    Default: default

Conditions:
  # Allow users to use an SNS Topic Arn or Name
  UseTopicName:
    Fn::Equals:
      - !Ref SnsTopicArn
      - default
  UseTopicArn:
    Fn::Not:
      - Condition: UseTopicName

Globals:
  Function:
    Runtime: python3.7
    Tracing: Active
    Timeout: 60
    MemorySize: 256
    DeadLetterQueue:
      Type: SQS
      TargetArn:
        Fn::GetAtt:
          - SnsForwarderFunctionDLQ
          - Arn

Resources:
  SnsForwarderFunctionByName:
    Type: AWS::Serverless::Function
    Condition: UseTopicName
    Properties:
      CodeUri: src/
      Handler: myfunction.handler
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TOPIC_ARN: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnsTopicName}
      Policies:
        -
          SNSPublishMessagePolicy:
            TopicName: !Ref SnsTopicName

  SnsForwarderFunctionByArn:
    Type: AWS::Serverless::Function
    Condition: UseTopicArn
    Properties:
      CodeUri: src/
      Handler: myfunction.handler
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TOPIC_ARN: !Ref SnsTopicArn
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Action:
                - 'sns:Publish'
              Effect: Allow
              Resource: !Ref SnsTopicArn

  SnsForwarderFunctionDLQ:
    Type: AWS::SQS::Queue

Outputs:
  SnsForwarderFunctionName:
    Description: "Sns Forwarder Lambda Function Name"
    Value:
      Fn::If:
        - UseTopicName
        - !Ref SnsForwarderFunctionByName
        - !Ref SnsForwarderFunctionByArn
  SnsForwarderFunctionArn:
    Description: "Sns Forwarder Lambda Function ARN"
    Value: 
      Fn::If:
        - UseTopicName
        - !GetAtt SnsForwarderFunctionByName.Arn
        - !GetAtt SnsForwarderFunctionByArn.Arn
  SnsForwarderFunctionDLQArn:
    Description: "DLQ ARN"
    Value: !GetAtt SnsForwarderFunctionDLQ.Arn
